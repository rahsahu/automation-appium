2019-09-04 09:17:07:501 - info: [Appium] Welcome to Appium v1.9.1
2019-09-04 09:17:07:504 - info: [Appium] Non-default server args:
2019-09-04 09:17:07:505 - info: [Appium]   address: 127.0.0.1
2019-09-04 09:17:07:505 - info: [Appium]   port: 4387
2019-09-04 09:17:07:505 - info: [Appium]   log: /Users/rahulsahu/Documents/workspace-spring-tool-suite4401/automation-appium/target/appiumLogs.txt
2019-09-04 09:17:07:505 - info: [Appium]   loglevel: error:debug
2019-09-04 09:17:07:541 - info: [Appium] Appium REST http interface listener started on 127.0.0.1:4387
2019-09-04 09:17:07:582 - info: [HTTP] --> GET /wd/hub/status
2019-09-04 09:17:07:582 - info: [HTTP] {}
2019-09-04 09:17:07:584 - debug: [GENERIC] Calling AppiumDriver.getStatus() with args: []
2019-09-04 09:17:07:586 - debug: [GENERIC] Responding to client with driver.getStatus() result: {"build":{"version":"1.9.1"}}
2019-09-04 09:17:07:591 - info: [HTTP] <-- GET /wd/hub/status 200 7 ms - 67
2019-09-04 09:17:07:591 - info: [HTTP] 
2019-09-04 09:17:08:265 - info: [HTTP] --> POST /wd/hub/session
2019-09-04 09:17:08:266 - info: [HTTP] {"desiredCapabilities":{"appActivity":".NetworkManagement","appPackage":"com.sec.android.app.simsettingmgr","noReset":true,"newCommandTimeout":600,"platformVersion":"Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general commands: devices [-l]             list connected devices (-l for long output) help                     show this help message version                  show version numnetworking: connect HOST[:PORT]
2019-09-04 09:17:08:267 - debug: [W3C] Calling AppiumDriver.createSession() with args: [{"appActivity":".NetworkManagement","appPackage":"com.sec.android.app.simsettingmgr","noReset":true,"newCommandTimeout":600,"platformVersion":"Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general commands: devices [-l]             list connected devices (-l for long output) help                     show this help message version                  show version numnetworking: connect HOST[:PORT]      connect to a device via TCP/IP [defau...
2019-09-04 09:17:08:267 - debug: [BaseDriver] Event 'newSessionRequested' logged at 1567588628267 (14:47:08 GMT+0530 (India Standard Time))
2019-09-04 09:17:08:271 - warn: [BaseDriver] The capabilities ["handlesAlerts"] are not standard capabilities and should have an extension prefix
2019-09-04 09:17:08:275 - info: [Appium] Creating new AndroidUiautomator2Driver (v1.19.0) session
2019-09-04 09:17:08:276 - info: [Appium] Capabilities:
2019-09-04 09:17:08:276 - info: [Appium]   handlesAlerts: true
2019-09-04 09:17:08:276 - info: [Appium]   platformName: android
2019-09-04 09:17:08:276 - info: [Appium]   appActivity: .NetworkManagement
2019-09-04 09:17:08:276 - info: [Appium]   appPackage: com.sec.android.app.simsettingmgr
2019-09-04 09:17:08:276 - info: [Appium]   automationName: UIAutomator2
2019-09-04 09:17:08:276 - info: [Appium]   deviceName: Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general commands: devices [-l]             list connected devices (-l for long output) help                     show this help message version                  show version numnetworking: connect HOST[:PORT]      connect to a device via TCP/IP [default port=5555] disconnect [HOST[:PORT]]     disconnect from given TCP/IP device [default port=5555], or all forward --list           list all forward socket connections forward [--no-rebind] LOCAL REMOTE     forward socket connection using:       tcp:<port> (<local> may be "tcp:0" to pick any open port)       localabstract:<unix domain socket name>       localreserved:<unix domain socket name>       localfilesystem:<unix domain socket name>       dev:<character device name>       jdwp:<process pid> (remote only) forward --remove LOCAL   remove specific forward socket connection forward --remove-all     remove all forward socket connections ppp TTY [PARAMETER...]   run PPP over USB reverse --list           list all reverse socket connections from device reverse [--no-rebind] REMOTE LOCAL     reverse socket connection using:       tcp:<port> (<remote> may be "tcp:0" to pick any open port)       localabstract:<unix domain socket name>       localreserved:<unix domain socket name>       localfilesystem:<unix domain socket name> reverse --remove REMOTE  remove specific reverse socket connection reverse --remove-all     remove all reverse socket connections from devicefile transfer: push [--sync] LOCAL... REMOTE     copy local files/directories to device     --sync: only push files that are newer on the host than the device pull [-a] REMOTE... LOCAL     copy files/dirs from device     -a: preserve file timestamp and mode sync [all|data|odm|oem|product|system|vendor]     sync a local build from $ANDROID_PRODUCT_OUT to the device (default all)     -l: list but don't copyshell: shell [-e ESCAPE] [-n] [-Tt] [-x] [COMMAND...]     run remote shell command (interactive shell if no command given)     -e: choose escape character, or "none"; default '~'     -n: don't read from stdin     -T: disable PTY allocation     -t: force PTY allocation     -x: disable remote exit codes and stdout/stderr separation emu COMMAND              run emulator console commandapp installation: install [-lrtsdg] [--instant] PACKAGE install-multiple [-lrtsdpg] [--instant] PACKAGE...     push package(s) to the device and install them     -l: forward lock application     -r: replace existing application     -t: allow test packages     -s: install application on sdcard     -d: allow version code downgrade (debuggable packages only)     -p: partial application install (install-multiple only)     -g: grant all runtime permissions     --instant: cause the app to be installed as an ephemeral install app uninstall [-k] PACKAGE     remove this app package from the device     '-k': keep the data and cache directoriesbackup/restore:   to show usage run "adb shell bu help"debugging: bugreport [PATH]     write bugreport to given PATH [default=bugreport.zip];     if PATH is a directory, the bug report is saved in that directory.     devices that don't support zipped bug reports output to stdout. jdwp                     list pids of processes hosting a JDWP transport logcat                   show device log (logcat --help for more)security: disable-verity           disable dm-verity checking on userdebug builds enable-verity            re-enable dm-verity checking on userdebug builds keygen FILE     generate adb public/private key; private key stored in FILE,     public key stored in FILE.pub (existing files overwritten)scripting: wait-for[-TRANSPORT]-STATE     wait for device to be in the given state     State: device, recovery, sideload, or bootloader     Transport: usb, local, or any [default=any] get-state                print offline | bootloader | device get-serialno             print <serial-number> get-devpath              print <device-path> remount                  remount partitions read-write reboot [bootloader|recovery|sideload|sideload-auto-reboot]     reboot the device; defaults to booting system image but     supports bootloader and recovery too. sideload reboots     into recovery and automatically starts sideload mode,     sideload-auto-reboot is the same but reboots after sideloading. sideload OTAPACKAGE      sideload the given full OTA package root                     restart adbd with root permissions unroot                   restart adbd without root permissions usb                      restart adb server listening on USB tcpip PORT               restart adb server listening on TCP on PORTinternal debugging: start-server             ensure that there is a server running kill-server              kill the server if it is running reconnect                kick connection from host side to force reconnect reconnect device         kick connection from device side to force reconnect reconnect offline        reset offline/unauthorized devices to force reconnectenvironment variables: $ADB_TRACE     comma-separated list of debug info to log:     all,adb,sockets,packets,rwx,usb,sync,sysdeps,transport,jdwp $ADB_VENDOR_KEYS         colon-separated list of keys (files or directories) $ANDROID_SERIAL          serial number to connect to (see -s) $ANDROID_LOG_TAGS        tags to be used by logcat (see logcat --help)
2019-09-04 09:17:08:276 - info: [Appium]   fullReset: false
2019-09-04 09:17:08:276 - info: [Appium]   newCommandTimeout: 600
2019-09-04 09:17:08:276 - info: [Appium]   noReset: true
2019-09-04 09:17:08:276 - info: [Appium]   platformVersion: Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general commands: devices [-l]             list connected devices (-l for long output) help                     show this help message version                  show version numnetworking: connect HOST[:PORT]      connect to a device via TCP/IP [default port=5555] disconnect [HOST[:PORT]]     disconnect from given TCP/IP device [default port=5555], or all forward --list           list all forward socket connections forward [--no-rebind] LOCAL REMOTE     forward socket connection using:       tcp:<port> (<local> may be "tcp:0" to pick any open port)       localabstract:<unix domain socket name>       localreserved:<unix domain socket name>       localfilesystem:<unix domain socket name>       dev:<character device name>       jdwp:<process pid> (remote only) forward --remove LOCAL   remove specific forward socket connection forward --remove-all     remove all forward socket connections ppp TTY [PARAMETER...]   run PPP over USB reverse --list           list all reverse socket connections from device reverse [--no-rebind] REMOTE LOCAL     reverse socket connection using:       tcp:<port> (<remote> may be "tcp:0" to pick any open port)       localabstract:<unix domain socket name>       localreserved:<unix domain socket name>       localfilesystem:<unix domain socket name> reverse --remove REMOTE  remove specific reverse socket connection reverse --remove-all     remove all reverse socket connections from devicefile transfer: push [--sync] LOCAL... REMOTE     copy local files/directories to device     --sync: only push files that are newer on the host than the device pull [-a] REMOTE... LOCAL     copy files/dirs from device     -a: preserve file timestamp and mode sync [all|data|odm|oem|product|system|vendor]     sync a local build from $ANDROID_PRODUCT_OUT to the device (default all)     -l: list but don't copyshell: shell [-e ESCAPE] [-n] [-Tt] [-x] [COMMAND...]     run remote shell command (interactive shell if no command given)     -e: choose escape character, or "none"; default '~'     -n: don't read from stdin     -T: disable PTY allocation     -t: force PTY allocation     -x: disable remote exit codes and stdout/stderr separation emu COMMAND              run emulator console commandapp installation: install [-lrtsdg] [--instant] PACKAGE install-multiple [-lrtsdpg] [--instant] PACKAGE...     push package(s) to the device and install them     -l: forward lock application     -r: replace existing application     -t: allow test packages     -s: install application on sdcard     -d: allow version code downgrade (debuggable packages only)     -p: partial application install (install-multiple only)     -g: grant all runtime permissions     --instant: cause the app to be installed as an ephemeral install app uninstall [-k] PACKAGE     remove this app package from the device     '-k': keep the data and cache directoriesbackup/restore:   to show usage run "adb shell bu help"debugging: bugreport [PATH]     write bugreport to given PATH [default=bugreport.zip];     if PATH is a directory, the bug report is saved in that directory.     devices that don't support zipped bug reports output to stdout. jdwp                     list pids of processes hosting a JDWP transport logcat                   show device log (logcat --help for more)security: disable-verity           disable dm-verity checking on userdebug builds enable-verity            re-enable dm-verity checking on userdebug builds keygen FILE     generate adb public/private key; private key stored in FILE,     public key stored in FILE.pub (existing files overwritten)scripting: wait-for[-TRANSPORT]-STATE     wait for device to be in the given state     State: device, recovery, sideload, or bootloader     Transport: usb, local, or any [default=any] get-state                print offline | bootloader | device get-serialno             print <serial-number> get-devpath              print <device-path> remount                  remount partitions read-write reboot [bootloader|recovery|sideload|sideload-auto-reboot]     reboot the device; defaults to booting system image but     supports bootloader and recovery too. sideload reboots     into recovery and automatically starts sideload mode,     sideload-auto-reboot is the same but reboots after sideloading. sideload OTAPACKAGE      sideload the given full OTA package root                     restart adbd with root permissions unroot                   restart adbd without root permissions usb                      restart adb server listening on USB tcpip PORT               restart adb server listening on TCP on PORTinternal debugging: start-server             ensure that there is a server running kill-server              kill the server if it is running reconnect                kick connection from host side to force reconnect reconnect device         kick connection from device side to force reconnect reconnect offline        reset offline/unauthorized devices to force reconnectenvironment variables: $ADB_TRACE     comma-separated list of debug info to log:     all,adb,sockets,packets,rwx,usb,sync,sysdeps,transport,jdwp $ADB_VENDOR_KEYS         colon-separated list of keys (files or directories) $ANDROID_SERIAL          serial number to connect to (see -s) $ANDROID_LOG_TAGS        tags to be used by logcat (see logcat --help)
2019-09-04 09:17:08:276 - info: [Appium]   udid: 988ad83557325a315930
2019-09-04 09:17:08:280 - debug: [BaseDriver] W3C capabilities {"alwaysMatch":{"appium:han... and MJSONWP desired capabilities {"appActivity":".NetworkMan... were provided
2019-09-04 09:17:08:280 - debug: [BaseDriver] Creating session with W3C capabilities: {"alwaysMatch":{"appium:han...
2019-09-04 09:17:08:286 - warn: [BaseDriver] The following capabilities were provided, but are not recognized by appium: handlesAlerts.
2019-09-04 09:17:08:295 - info: [BaseDriver] Session created with session id: c7a3061b-b6cc-4021-88af-830e34bbbf9c
2019-09-04 09:17:08:535 - info: [AndroidDriver] Java version is: 1.8.0_181
2019-09-04 09:17:08:538 - info: [ADB] Checking whether adb is present
2019-09-04 09:17:08:547 - info: [ADB] Found 7 'build-tools' folders under '/Users/rahulsahu/Library/Android/sdk' (newest first):
2019-09-04 09:17:08:547 - info: [ADB]     /Users/rahulsahu/Library/Android/sdk/build-tools/28.0.3
2019-09-04 09:17:08:547 - info: [ADB]     /Users/rahulsahu/Library/Android/sdk/build-tools/28.0.1
2019-09-04 09:17:08:547 - info: [ADB]     /Users/rahulsahu/Library/Android/sdk/build-tools/27.0.3
2019-09-04 09:17:08:547 - info: [ADB]     /Users/rahulsahu/Library/Android/sdk/build-tools/27.0.1
2019-09-04 09:17:08:548 - info: [ADB]     /Users/rahulsahu/Library/Android/sdk/build-tools/26.0.2
2019-09-04 09:17:08:548 - info: [ADB]     /Users/rahulsahu/Library/Android/sdk/build-tools/26.0.1
2019-09-04 09:17:08:548 - info: [ADB]     /Users/rahulsahu/Library/Android/sdk/build-tools/25.0.2
2019-09-04 09:17:08:548 - info: [ADB] Using adb from /Users/rahulsahu/Library/Android/sdk/platform-tools/adb
2019-09-04 09:17:08:548 - info: [AndroidDriver] Retrieving device list
2019-09-04 09:17:08:549 - debug: [ADB] Trying to find a connected android device
2019-09-04 09:17:08:549 - debug: [ADB] Getting connected devices...
2019-09-04 09:17:08:560 - debug: [ADB] 1 device(s) connected
2019-09-04 09:17:08:561 - info: [AndroidDriver] Using device: 988ad83557325a315930
2019-09-04 09:17:08:562 - debug: [ADB] Setting device id to 988ad83557325a315930
2019-09-04 09:17:08:564 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell getprop ro.build.version.sdk'
2019-09-04 09:17:08:643 - debug: [ADB] Current device property 'ro.build.version.sdk': 28
2019-09-04 09:17:08:643 - debug: [ADB] Device API level: 28
2019-09-04 09:17:08:644 - warn: [AndroidDriver] No app sent in, not parsing package/activity
2019-09-04 09:17:08:644 - info: [ADB] Getting device platform version
2019-09-04 09:17:08:645 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell getprop ro.build.version.release'
2019-09-04 09:17:08:698 - debug: [ADB] Current device property 'ro.build.version.release': 9
2019-09-04 09:17:08:698 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell wm size'
2019-09-04 09:17:08:796 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell wm density'
2019-09-04 09:17:08:895 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell getprop ro.product.model'
2019-09-04 09:17:08:937 - debug: [ADB] Current device property 'ro.product.model': SM-N950F
2019-09-04 09:17:08:938 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell getprop ro.product.manufacturer'
2019-09-04 09:17:08:986 - debug: [ADB] Current device property 'ro.product.manufacturer': samsung
2019-09-04 09:17:08:986 - debug: [ADB] Device API level: 28
2019-09-04 09:17:08:988 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell am force-stop io.appium.uiautomator2.server'
2019-09-04 09:17:09:097 - debug: [ADB] Checking app cert for /usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v1.18.0.apk
2019-09-04 09:17:09:099 - info: [ADB] Using apksigner from /Users/rahulsahu/Library/Android/sdk/build-tools/28.0.3/apksigner
2019-09-04 09:17:09:099 - debug: [ADB] Starting '/Users/rahulsahu/Library/Android/sdk/build-tools/28.0.3/apksigner' with args '["verify","--print-certs","/usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v1.18.0.apk"]'
2019-09-04 09:17:09:636 - debug: [ADB] apksigner stdout: Signer #1 certificate DN: EMAILADDRESS=android@android.com, CN=Android, OU=Android, O=Android, L=Mountain View, ST=California, C=US
2019-09-04 09:17:09:636 - debug: [ADB] Signer #1 certificate SHA-256 digest: a40da80a59d170caa950cf15c18c454d47a39b26989d8b640ecd745ba71bf5dc
2019-09-04 09:17:09:636 - debug: [ADB] Signer #1 certificate SHA-1 digest: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81
2019-09-04 09:17:09:636 - debug: [ADB] Signer #1 certificate MD5 digest: e89b158e4bcf988ebd09eb83f5378e87
2019-09-04 09:17:09:636 - debug: [ADB] WARNING: META-INF/INDEX.LIST not protected by signature. Unauthorized modifications to this JAR entry will not be detected. Delete or move the entry outside of META-INF/.
2019-09-04 09:17:09:636 - debug: [ADB] WARNING: META-INF/io.netty.versions.properties not protected by signature. Unauthorized modifications to this JAR entry will not be detected. Delete or move the entry outside of META-INF/.
2019-09-04 09:17:09:637 - debug: [ADB] 
2019-09-04 09:17:09:637 - debug: [ADB] '/usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v1.18.0.apk' is already signed.
2019-09-04 09:17:09:637 - debug: [ADB] Checking app cert for /usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk
2019-09-04 09:17:09:637 - debug: [ADB] Starting '/Users/rahulsahu/Library/Android/sdk/build-tools/28.0.3/apksigner' with args '["verify","--print-certs","/usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk"]'
2019-09-04 09:17:10:140 - debug: [ADB] apksigner stdout: Signer #1 certificate DN: EMAILADDRESS=android@android.com, CN=Android, OU=Android, O=Android, L=Mountain View, ST=California, C=US
2019-09-04 09:17:10:140 - debug: [ADB] Signer #1 certificate SHA-256 digest: a40da80a59d170caa950cf15c18c454d47a39b26989d8b640ecd745ba71bf5dc
2019-09-04 09:17:10:140 - debug: [ADB] Signer #1 certificate SHA-1 digest: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81
2019-09-04 09:17:10:140 - debug: [ADB] Signer #1 certificate MD5 digest: e89b158e4bcf988ebd09eb83f5378e87
2019-09-04 09:17:10:140 - debug: [ADB] 
2019-09-04 09:17:10:140 - debug: [ADB] '/usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk' is already signed.
2019-09-04 09:17:10:141 - debug: [ADB] Getting install status for io.appium.uiautomator2.server
2019-09-04 09:17:10:142 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm list packages io.appium.uiautomator2.server'
2019-09-04 09:17:10:321 - debug: [ADB] App is installed
2019-09-04 09:17:10:322 - debug: [ADB] Getting package info for 'io.appium.uiautomator2.server'
2019-09-04 09:17:10:322 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell dumpsys package io.appium.uiautomator2.server'
2019-09-04 09:17:10:415 - info: [ADB] Checking whether aapt is present
2019-09-04 09:17:10:416 - info: [ADB] Using aapt from /Users/rahulsahu/Library/Android/sdk/build-tools/28.0.3/aapt
2019-09-04 09:17:10:441 - debug: [ADB] The installed 'io.appium.uiautomator2.server' package does not require upgrade ('1.18.0' >= '1.18.0')
2019-09-04 09:17:10:441 - debug: [ADB] Getting install status for io.appium.uiautomator2.server.test
2019-09-04 09:17:10:442 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm list packages io.appium.uiautomator2.server.test'
2019-09-04 09:17:10:616 - debug: [ADB] App is installed
2019-09-04 09:17:10:616 - debug: [ADB] Getting package info for 'io.appium.uiautomator2.server.test'
2019-09-04 09:17:10:616 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell dumpsys package io.appium.uiautomator2.server.test'
2019-09-04 09:17:10:710 - warn: [ADB] Cannot read version codes of '/usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk' and/or 'io.appium.uiautomator2.server.test'
2019-09-04 09:17:10:710 - warn: [ADB] Cannot read version names of '/usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk' and/or 'io.appium.uiautomator2.server.test'. Assuming correct app version is already installed
2019-09-04 09:17:10:710 - debug: [UiAutomator2] Waiting up to 20000ms for instrumentation 'io.appium.uiautomator2.server.test/android.support.test.runner.AndroidJUnitRunner' to be available
2019-09-04 09:17:10:711 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm list instrumentation'
2019-09-04 09:17:10:789 - debug: [UiAutomator2] Instrumentation 'io.appium.uiautomator2.server.test/android.support.test.runner.AndroidJUnitRunner' available
2019-09-04 09:17:10:790 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 wait-for-device'
2019-09-04 09:17:10:800 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell echo ping'
2019-09-04 09:17:10:829 - debug: [AndroidDriver] Pushing settings apk to device...
2019-09-04 09:17:10:829 - debug: [ADB] Getting install status for io.appium.settings
2019-09-04 09:17:10:830 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm list packages io.appium.settings'
2019-09-04 09:17:10:986 - debug: [ADB] App is installed
2019-09-04 09:17:10:987 - debug: [ADB] Getting package info for 'io.appium.settings'
2019-09-04 09:17:10:987 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell dumpsys package io.appium.settings'
2019-09-04 09:17:11:080 - debug: [ADB] The installed 'io.appium.settings' package does not require upgrade (17 > 5)
2019-09-04 09:17:11:081 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell ps'
2019-09-04 09:17:11:264 - debug: [AndroidDriver] io.appium.settings is already running. There is no need to reset its permissions.
2019-09-04 09:17:11:265 - debug: [ADB] Device API level: 28
2019-09-04 09:17:11:265 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell appops set io.appium.settings android\:mock_location allow'
2019-09-04 09:17:11:358 - warn: [AndroidDriver] setDeviceLanguageCountry requires language or country.
2019-09-04 09:17:11:359 - warn: [AndroidDriver] Got language: 'null' and country: 'null'
2019-09-04 09:17:11:360 - debug: [Logcat] Starting logcat capture
2019-09-04 09:17:11:405 - debug: [AndroidDriver] Pushing unlock helper app to device...
2019-09-04 09:17:11:405 - debug: [ADB] Getting install status for io.appium.unlock
2019-09-04 09:17:11:405 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm list packages io.appium.unlock'
2019-09-04 09:17:11:603 - debug: [ADB] App is installed
2019-09-04 09:17:11:603 - debug: [ADB] Getting package info for 'io.appium.unlock'
2019-09-04 09:17:11:603 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell dumpsys package io.appium.unlock'
2019-09-04 09:17:11:717 - debug: [ADB] The installed 'io.appium.unlock' package does not require upgrade ('2.0.0' >= '2.0.0')
2019-09-04 09:17:11:717 - debug: [UiAutomator2] Forwarding UiAutomator2 Server port 6790 to 8204
2019-09-04 09:17:11:718 - debug: [ADB] Forwarding system: 8204 to device: 6790
2019-09-04 09:17:11:718 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 forward tcp\:8204 tcp\:6790'
2019-09-04 09:17:11:727 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell rm -rf /data/local/tmp/strings.json'
2019-09-04 09:17:11:781 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm path com.sec.android.app.simsettingmgr'
2019-09-04 09:17:11:892 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 pull /system/priv-app/SimSettingMgr/SimSettingMgr.apk /var/folders/mm/v2ky8tn1087_3dpmt927zpw00000gp/T/com.sec.android.app.simsettingmgr.apk'
2019-09-04 09:17:12:051 - debug: [ADB] Pulled app for package 'com.sec.android.app.simsettingmgr' to '/var/folders/mm/v2ky8tn1087_3dpmt927zpw00000gp/T/com.sec.android.app.simsettingmgr.apk'
2019-09-04 09:17:12:052 - debug: [AndroidDriver] Extracting strings from apk
2019-09-04 09:17:12:052 - debug: [AndroidDriver] /var/folders/mm/v2ky8tn1087_3dpmt927zpw00000gp/T/com.sec.android.app.simsettingmgr.apk
2019-09-04 09:17:12:052 - debug: [AndroidDriver] null
2019-09-04 09:17:12:052 - debug: [AndroidDriver] /var/folders/mm/v2ky8tn1087_3dpmt927zpw00000gp/T/com.sec.android.app.simsettingmgr
2019-09-04 09:17:12:053 - debug: [ADB] Extracting strings for language: default
2019-09-04 09:17:12:324 - info: [ADB] Successfully extracted 283 strings from '/var/folders/mm/v2ky8tn1087_3dpmt927zpw00000gp/T/com.sec.android.app.simsettingmgr.apk' resources for '(default)' configuration
2019-09-04 09:17:12:332 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 push /var/folders/mm/v2ky8tn1087_3dpmt927zpw00000gp/T/com.sec.android.app.simsettingmgr/strings.json /data/local/tmp'
2019-09-04 09:17:12:367 - debug: [UiAutomator2] No app capability. Assuming it is already on the device
2019-09-04 09:17:12:367 - debug: [ADB] Checking app cert for null
2019-09-04 09:17:12:380 - debug: [ADB] 'null' doesn't exist
2019-09-04 09:17:12:381 - debug: [ADB] Getting all processes with uiautomator
2019-09-04 09:17:12:381 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell ps'
2019-09-04 09:17:12:571 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell am force-stop io.appium.uiautomator2.server'
2019-09-04 09:17:12:680 - info: [UiAutomator2] Starting uiautomator2 server 1.18.0
2019-09-04 09:17:12:681 - info: [UiAutomator2] Using UIAutomator2 server from '/usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v1.18.0.apk' and test from '/usr/local/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk'
2019-09-04 09:17:12:681 - info: [UiAutomator2] Running command: 'adb -s 988ad83557325a315930 shell am instrument -w io.appium.uiautomator2.server.test/android.support.test.runner.AndroidJUnitRunner'
2019-09-04 09:17:12:684 - info: [UiAutomator2] Waiting up to 20000ms for UiAutomator2 to be online...
2019-09-04 09:17:12:686 - debug: [JSONWP Proxy] Matched '/status' to command name 'getStatus'
2019-09-04 09:17:12:687 - debug: [JSONWP Proxy] Proxying [GET /status] to [GET http://localhost:8204/wd/hub/status] with no body
2019-09-04 09:17:13:705 - debug: [JSONWP Proxy] Matched '/status' to command name 'getStatus'
2019-09-04 09:17:13:706 - debug: [JSONWP Proxy] Proxying [GET /status] to [GET http://localhost:8204/wd/hub/status] with no body
2019-09-04 09:17:14:720 - debug: [JSONWP Proxy] Matched '/status' to command name 'getStatus'
2019-09-04 09:17:14:720 - debug: [JSONWP Proxy] Proxying [GET /status] to [GET http://localhost:8204/wd/hub/status] with no body
2019-09-04 09:17:15:728 - debug: [JSONWP Proxy] Matched '/status' to command name 'getStatus'
2019-09-04 09:17:15:728 - debug: [JSONWP Proxy] Proxying [GET /status] to [GET http://localhost:8204/wd/hub/status] with no body
2019-09-04 09:17:16:737 - debug: [JSONWP Proxy] Matched '/status' to command name 'getStatus'
2019-09-04 09:17:16:737 - debug: [JSONWP Proxy] Proxying [GET /status] to [GET http://localhost:8204/wd/hub/status] with no body
2019-09-04 09:17:16:887 - debug: [JSONWP Proxy] Got response with status 200: "{\"sessionId\":\"SESSIONID\",\"status\":0,\"value\":\"Status Invoked\"}"
2019-09-04 09:17:16:888 - debug: [JSONWP Proxy] Matched '/session' to command name 'createSession'
2019-09-04 09:17:16:889 - debug: [JSONWP Proxy] Proxying [POST /session] to [POST http://localhost:8204/wd/hub/session] with body: {"desiredCapabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"android","handlesAlerts":true,"appActivity":".NetworkManagement","appPackage":"com.sec.android.app.simsettingmgr","automationName":"UIAutomator2","deviceName":"Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:loca...
2019-09-04 09:17:17:020 - debug: [JSONWP Proxy] Got response with status 200: {"sessionId":"742c2b78-dba4-44f8-8707-42dbca73d76e","status":0,"value":"Created Session"}
2019-09-04 09:17:17:021 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell dumpsys window'
2019-09-04 09:17:17:201 - info: [AndroidDriver] Screen already unlocked, doing nothing
2019-09-04 09:17:17:202 - info: [UiAutomator2] UiAutomator2 did not start the activity we were waiting for, 'com.sec.android.app.simsettingmgr/.NetworkManagement'. Starting it ourselves
2019-09-04 09:17:17:203 - debug: [ADB] Device API level: 28
2019-09-04 09:17:17:203 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell am start -W -n com.sec.android.app.simsettingmgr/.NetworkManagement -S -a android.intent.action.MAIN -c android.intent.category.LAUNCHER -f 0x10200000'
2019-09-04 09:17:17:583 - debug: [JSONWP Proxy] Proxying [GET /appium/device/pixel_ratio] to [GET http://localhost:8204/wd/hub/session/742c2b78-dba4-44f8-8707-42dbca73d76e/appium/device/pixel_ratio] with body: {}
2019-09-04 09:17:17:601 - debug: [JSONWP Proxy] Got response with status 200: "{\"sessionId\":\"742c2b78-dba4-44f8-8707-42dbca73d76e\",\"status\":0,\"value\":2.625}"
2019-09-04 09:17:17:603 - debug: [JSONWP Proxy] Matched '/appium/device/system_bars' to command name 'getSystemBars'
2019-09-04 09:17:17:603 - debug: [JSONWP Proxy] Proxying [GET /appium/device/system_bars] to [GET http://localhost:8204/wd/hub/session/742c2b78-dba4-44f8-8707-42dbca73d76e/appium/device/system_bars] with body: {}
2019-09-04 09:17:17:620 - debug: [JSONWP Proxy] Got response with status 200: "{\"sessionId\":\"742c2b78-dba4-44f8-8707-42dbca73d76e\",\"status\":0,\"value\":{\"statusBar\":63}}"
2019-09-04 09:17:17:621 - debug: [JSONWP Proxy] Matched '/window/current/size' to command name 'getWindowSize'
2019-09-04 09:17:17:621 - debug: [JSONWP Proxy] Proxying [GET /window/current/size] to [GET http://localhost:8204/wd/hub/session/742c2b78-dba4-44f8-8707-42dbca73d76e/window/current/size] with body: {}
2019-09-04 09:17:17:638 - debug: [JSONWP Proxy] Got response with status 200: "{\"sessionId\":\"742c2b78-dba4-44f8-8707-42dbca73d76e\",\"status\":0,\"value\":{\"height\":2094,\"width\":1080}}"
2019-09-04 09:17:17:639 - info: [Appium] New AndroidUiautomator2Driver session created successfully, session c7a3061b-b6cc-4021-88af-830e34bbbf9c added to master session list
2019-09-04 09:17:17:641 - debug: [BaseDriver] Event 'newSessionStarted' logged at 1567588637641 (14:47:17 GMT+0530 (India Standard Time))
2019-09-04 09:17:17:642 - debug: [W3C] Cached the protocol value 'W3C' for the new session c7a3061b-b6cc-4021-88af-830e34bbbf9c
2019-09-04 09:17:17:643 - debug: [W3C] Responding to client with driver.createSession() result: {"capabilities":{"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"android","handlesAlerts":true,"appActivity":".NetworkManagement","appPackage":"com.sec.android.app.simsettingmgr","automationName":"UIAutomator2","deviceName":"Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5...
2019-09-04 09:17:17:645 - info: [HTTP] <-- POST /wd/hub/session 200 9380 ms - 13041
2019-09-04 09:17:17:645 - info: [HTTP] 
2019-09-04 09:17:17:690 - info: [HTTP] --> GET /wd/hub/session/c7a3061b-b6cc-4021-88af-830e34bbbf9c
2019-09-04 09:17:17:690 - info: [HTTP] {}
2019-09-04 09:17:17:691 - debug: [W3C] Calling AppiumDriver.getSession() with args: ["c7a3061b-b6cc-4021-88af-830e34bbbf9c"]
2019-09-04 09:17:17:699 - debug: [UiAutomator2] Getting session details from server to mix in
2019-09-04 09:17:17:700 - debug: [JSONWP Proxy] Matched '/' to command name 'getSession'
2019-09-04 09:17:17:700 - debug: [JSONWP Proxy] Proxying [GET /] to [GET http://localhost:8204/wd/hub/session/742c2b78-dba4-44f8-8707-42dbca73d76e] with body: {}
2019-09-04 09:17:17:714 - debug: [JSONWP Proxy] Got response with status 200: "{\"sessionId\":\"742c2b78-dba4-44f8-8707-42dbca73d76e\",\"status\":0,\"value\":{}}"
2019-09-04 09:17:17:715 - debug: [W3C] Responding to client with driver.getSession() result: {"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"android","handlesAlerts":true,"appActivity":".NetworkManagement","appPackage":"com.sec.android.app.simsettingmgr","automationName":"UIAutomator2","deviceName":"Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general comm...
2019-09-04 09:17:17:716 - info: [HTTP] <-- GET /wd/hub/session/c7a3061b-b6cc-4021-88af-830e34bbbf9c 200 26 ms - 12973
2019-09-04 09:17:17:716 - info: [HTTP] 
2019-09-04 09:17:17:722 - info: [HTTP] --> GET /wd/hub/session/c7a3061b-b6cc-4021-88af-830e34bbbf9c
2019-09-04 09:17:17:723 - info: [HTTP] {}
2019-09-04 09:17:17:723 - debug: [W3C] Calling AppiumDriver.getSession() with args: ["c7a3061b-b6cc-4021-88af-830e34bbbf9c"]
2019-09-04 09:17:17:724 - debug: [UiAutomator2] Getting session details from server to mix in
2019-09-04 09:17:17:724 - debug: [JSONWP Proxy] Matched '/' to command name 'getSession'
2019-09-04 09:17:17:724 - debug: [JSONWP Proxy] Proxying [GET /] to [GET http://localhost:8204/wd/hub/session/742c2b78-dba4-44f8-8707-42dbca73d76e] with body: {}
2019-09-04 09:17:17:738 - debug: [JSONWP Proxy] Got response with status 200: "{\"sessionId\":\"742c2b78-dba4-44f8-8707-42dbca73d76e\",\"status\":0,\"value\":{}}"
2019-09-04 09:17:17:739 - debug: [W3C] Responding to client with driver.getSession() result: {"platform":"LINUX","webStorageEnabled":false,"takesScreenshot":true,"javascriptEnabled":true,"databaseEnabled":false,"networkConnectionEnabled":true,"locationContextEnabled":false,"warnings":{},"desired":{"platformName":"android","handlesAlerts":true,"appActivity":".NetworkManagement","appPackage":"com.sec.android.app.simsettingmgr","automationName":"UIAutomator2","deviceName":"Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general comm...
2019-09-04 09:17:17:740 - info: [HTTP] <-- GET /wd/hub/session/c7a3061b-b6cc-4021-88af-830e34bbbf9c 200 17 ms - 12973
2019-09-04 09:17:17:741 - info: [HTTP] 
2019-09-04 09:17:22:794 - info: [HTTP] --> POST /wd/hub/session
2019-09-04 09:17:22:794 - info: [HTTP] {"desiredCapabilities":{"goog:chromeOptions":{"args":["--disable-notifications","--host-resolver-rules=MAP www.opticks.io 127.0.0.1","--host-resolver-rules=MAP www.track.greentropolo.com 127.0.0.1"],"extensions":[]},"platformVersion":"Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general commands: devices [-l]             list connected devices (-l for long output) help                     show this help message ver
2019-09-04 09:17:22:794 - debug: [W3C] Calling AppiumDriver.createSession() with args: [{"goog:chromeOptions":{"args":["--disable-notifications","--host-resolver-rules=MAP www.opticks.io 127.0.0.1","--host-resolver-rules=MAP www.track.greentropolo.com 127.0.0.1"],"extensions":[]},"platformVersion":"Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general commands: devices [-l]             list connected devices (-l for long output) help                     show this help message version                  show version numnetwo...
2019-09-04 09:17:22:795 - debug: [BaseDriver] Event 'newSessionRequested' logged at 1567588642795 (14:47:22 GMT+0530 (India Standard Time))
2019-09-04 09:17:22:796 - info: [Appium] Creating new AndroidDriver (v4.1.1) session
2019-09-04 09:17:22:796 - info: [Appium] Capabilities:
2019-09-04 09:17:22:797 - info: [Appium]   browserName: chrome
2019-09-04 09:17:22:797 - info: [Appium]   goog:chromeOptions: {
2019-09-04 09:17:22:797 - info: [Appium]     args: {
2019-09-04 09:17:22:797 - info: [Appium]       0: --disable-notifications
2019-09-04 09:17:22:797 - info: [Appium]       1: --host-resolver-rules=MAP www.opticks.io 127.0.0.1
2019-09-04 09:17:22:797 - info: [Appium]       2: --host-resolver-rules=MAP www.track.greentropolo.com 127.0.0.1
2019-09-04 09:17:22:797 - info: [Appium]     }
2019-09-04 09:17:22:797 - info: [Appium]     extensions: {
2019-09-04 09:17:22:797 - info: [Appium]     }
2019-09-04 09:17:22:797 - info: [Appium]   }
2019-09-04 09:17:22:797 - info: [Appium]   platformName: android
2019-09-04 09:17:22:797 - info: [Appium]   deviceName: Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general commands: devices [-l]             list connected devices (-l for long output) help                     show this help message version                  show version numnetworking: connect HOST[:PORT]      connect to a device via TCP/IP [default port=5555] disconnect [HOST[:PORT]]     disconnect from given TCP/IP device [default port=5555], or all forward --list           list all forward socket connections forward [--no-rebind] LOCAL REMOTE     forward socket connection using:       tcp:<port> (<local> may be "tcp:0" to pick any open port)       localabstract:<unix domain socket name>       localreserved:<unix domain socket name>       localfilesystem:<unix domain socket name>       dev:<character device name>       jdwp:<process pid> (remote only) forward --remove LOCAL   remove specific forward socket connection forward --remove-all     remove all forward socket connections ppp TTY [PARAMETER...]   run PPP over USB reverse --list           list all reverse socket connections from device reverse [--no-rebind] REMOTE LOCAL     reverse socket connection using:       tcp:<port> (<remote> may be "tcp:0" to pick any open port)       localabstract:<unix domain socket name>       localreserved:<unix domain socket name>       localfilesystem:<unix domain socket name> reverse --remove REMOTE  remove specific reverse socket connection reverse --remove-all     remove all reverse socket connections from devicefile transfer: push [--sync] LOCAL... REMOTE     copy local files/directories to device     --sync: only push files that are newer on the host than the device pull [-a] REMOTE... LOCAL     copy files/dirs from device     -a: preserve file timestamp and mode sync [all|data|odm|oem|product|system|vendor]     sync a local build from $ANDROID_PRODUCT_OUT to the device (default all)     -l: list but don't copyshell: shell [-e ESCAPE] [-n] [-Tt] [-x] [COMMAND...]     run remote shell command (interactive shell if no command given)     -e: choose escape character, or "none"; default '~'     -n: don't read from stdin     -T: disable PTY allocation     -t: force PTY allocation     -x: disable remote exit codes and stdout/stderr separation emu COMMAND              run emulator console commandapp installation: install [-lrtsdg] [--instant] PACKAGE install-multiple [-lrtsdpg] [--instant] PACKAGE...     push package(s) to the device and install them     -l: forward lock application     -r: replace existing application     -t: allow test packages     -s: install application on sdcard     -d: allow version code downgrade (debuggable packages only)     -p: partial application install (install-multiple only)     -g: grant all runtime permissions     --instant: cause the app to be installed as an ephemeral install app uninstall [-k] PACKAGE     remove this app package from the device     '-k': keep the data and cache directoriesbackup/restore:   to show usage run "adb shell bu help"debugging: bugreport [PATH]     write bugreport to given PATH [default=bugreport.zip];     if PATH is a directory, the bug report is saved in that directory.     devices that don't support zipped bug reports output to stdout. jdwp                     list pids of processes hosting a JDWP transport logcat                   show device log (logcat --help for more)security: disable-verity           disable dm-verity checking on userdebug builds enable-verity            re-enable dm-verity checking on userdebug builds keygen FILE     generate adb public/private key; private key stored in FILE,     public key stored in FILE.pub (existing files overwritten)scripting: wait-for[-TRANSPORT]-STATE     wait for device to be in the given state     State: device, recovery, sideload, or bootloader     Transport: usb, local, or any [default=any] get-state                print offline | bootloader | device get-serialno             print <serial-number> get-devpath              print <device-path> remount                  remount partitions read-write reboot [bootloader|recovery|sideload|sideload-auto-reboot]     reboot the device; defaults to booting system image but     supports bootloader and recovery too. sideload reboots     into recovery and automatically starts sideload mode,     sideload-auto-reboot is the same but reboots after sideloading. sideload OTAPACKAGE      sideload the given full OTA package root                     restart adbd with root permissions unroot                   restart adbd without root permissions usb                      restart adb server listening on USB tcpip PORT               restart adb server listening on TCP on PORTinternal debugging: start-server             ensure that there is a server running kill-server              kill the server if it is running reconnect                kick connection from host side to force reconnect reconnect device         kick connection from device side to force reconnect reconnect offline        reset offline/unauthorized devices to force reconnectenvironment variables: $ADB_TRACE     comma-separated list of debug info to log:     all,adb,sockets,packets,rwx,usb,sync,sysdeps,transport,jdwp $ADB_VENDOR_KEYS         colon-separated list of keys (files or directories) $ANDROID_SERIAL          serial number to connect to (see -s) $ANDROID_LOG_TAGS        tags to be used by logcat (see logcat --help)
2019-09-04 09:17:22:798 - info: [Appium]   platformVersion: Android Debug Bridge version 1.0.40Version 4986621Installed as /Users/rahulsahu/Library/Android/sdk/platform-tools/adbglobal options: -a         listen on all network interfaces, not just localhost -d         use USB device (error if multiple devices connected) -e         use TCP/IP device (error if multiple TCP/IP devices available) -s SERIAL  use device with given serial (overrides $ANDROID_SERIAL) -t ID      use device with given transport id -H         name of adb server host [default=localhost] -P         port of adb server [default=5037] -L SOCKET  listen on given socket for adb server [default=tcp:localhost:5037]general commands: devices [-l]             list connected devices (-l for long output) help                     show this help message version                  show version numnetworking: connect HOST[:PORT]      connect to a device via TCP/IP [default port=5555] disconnect [HOST[:PORT]]     disconnect from given TCP/IP device [default port=5555], or all forward --list           list all forward socket connections forward [--no-rebind] LOCAL REMOTE     forward socket connection using:       tcp:<port> (<local> may be "tcp:0" to pick any open port)       localabstract:<unix domain socket name>       localreserved:<unix domain socket name>       localfilesystem:<unix domain socket name>       dev:<character device name>       jdwp:<process pid> (remote only) forward --remove LOCAL   remove specific forward socket connection forward --remove-all     remove all forward socket connections ppp TTY [PARAMETER...]   run PPP over USB reverse --list           list all reverse socket connections from device reverse [--no-rebind] REMOTE LOCAL     reverse socket connection using:       tcp:<port> (<remote> may be "tcp:0" to pick any open port)       localabstract:<unix domain socket name>       localreserved:<unix domain socket name>       localfilesystem:<unix domain socket name> reverse --remove REMOTE  remove specific reverse socket connection reverse --remove-all     remove all reverse socket connections from devicefile transfer: push [--sync] LOCAL... REMOTE     copy local files/directories to device     --sync: only push files that are newer on the host than the device pull [-a] REMOTE... LOCAL     copy files/dirs from device     -a: preserve file timestamp and mode sync [all|data|odm|oem|product|system|vendor]     sync a local build from $ANDROID_PRODUCT_OUT to the device (default all)     -l: list but don't copyshell: shell [-e ESCAPE] [-n] [-Tt] [-x] [COMMAND...]     run remote shell command (interactive shell if no command given)     -e: choose escape character, or "none"; default '~'     -n: don't read from stdin     -T: disable PTY allocation     -t: force PTY allocation     -x: disable remote exit codes and stdout/stderr separation emu COMMAND              run emulator console commandapp installation: install [-lrtsdg] [--instant] PACKAGE install-multiple [-lrtsdpg] [--instant] PACKAGE...     push package(s) to the device and install them     -l: forward lock application     -r: replace existing application     -t: allow test packages     -s: install application on sdcard     -d: allow version code downgrade (debuggable packages only)     -p: partial application install (install-multiple only)     -g: grant all runtime permissions     --instant: cause the app to be installed as an ephemeral install app uninstall [-k] PACKAGE     remove this app package from the device     '-k': keep the data and cache directoriesbackup/restore:   to show usage run "adb shell bu help"debugging: bugreport [PATH]     write bugreport to given PATH [default=bugreport.zip];     if PATH is a directory, the bug report is saved in that directory.     devices that don't support zipped bug reports output to stdout. jdwp                     list pids of processes hosting a JDWP transport logcat                   show device log (logcat --help for more)security: disable-verity           disable dm-verity checking on userdebug builds enable-verity            re-enable dm-verity checking on userdebug builds keygen FILE     generate adb public/private key; private key stored in FILE,     public key stored in FILE.pub (existing files overwritten)scripting: wait-for[-TRANSPORT]-STATE     wait for device to be in the given state     State: device, recovery, sideload, or bootloader     Transport: usb, local, or any [default=any] get-state                print offline | bootloader | device get-serialno             print <serial-number> get-devpath              print <device-path> remount                  remount partitions read-write reboot [bootloader|recovery|sideload|sideload-auto-reboot]     reboot the device; defaults to booting system image but     supports bootloader and recovery too. sideload reboots     into recovery and automatically starts sideload mode,     sideload-auto-reboot is the same but reboots after sideloading. sideload OTAPACKAGE      sideload the given full OTA package root                     restart adbd with root permissions unroot                   restart adbd without root permissions usb                      restart adb server listening on USB tcpip PORT               restart adb server listening on TCP on PORTinternal debugging: start-server             ensure that there is a server running kill-server              kill the server if it is running reconnect                kick connection from host side to force reconnect reconnect device         kick connection from device side to force reconnect reconnect offline        reset offline/unauthorized devices to force reconnectenvironment variables: $ADB_TRACE     comma-separated list of debug info to log:     all,adb,sockets,packets,rwx,usb,sync,sysdeps,transport,jdwp $ADB_VENDOR_KEYS         colon-separated list of keys (files or directories) $ANDROID_SERIAL          serial number to connect to (see -s) $ANDROID_LOG_TAGS        tags to be used by logcat (see logcat --help)
2019-09-04 09:17:22:798 - info: [Appium]   udid: 988ad83557325a315930
2019-09-04 09:17:22:800 - debug: [BaseDriver] W3C capabilities {"alwaysMatch":{"browserNam... and MJSONWP desired capabilities {"chromeOptions":{"args":["... were provided
2019-09-04 09:17:22:800 - debug: [BaseDriver] Creating session with W3C capabilities: {"alwaysMatch":{"browserNam...
2019-09-04 09:17:22:804 - warn: [BaseDriver] The following capabilities were provided, but are not recognized by appium: goog:chromeOptions.
2019-09-04 09:17:22:805 - info: [BaseDriver] Session created with session id: d0f2fb84-b3be-4b4b-a60a-767a265a9694
2019-09-04 09:17:22:924 - info: [AndroidDriver] Java version is: 1.8.0_181
2019-09-04 09:17:22:924 - info: [AndroidDriver] We're going to run a Chrome-based session
2019-09-04 09:17:22:924 - info: [AndroidDriver] Chrome-type package and activity are com.android.chrome and com.google.android.apps.chrome.Main
2019-09-04 09:17:22:925 - info: [AndroidDriver] Retrieving device list
2019-09-04 09:17:22:925 - debug: [ADB] Trying to find a connected android device
2019-09-04 09:17:22:925 - debug: [ADB] Getting connected devices...
2019-09-04 09:17:22:935 - debug: [ADB] 1 device(s) connected
2019-09-04 09:17:22:935 - info: [AndroidDriver] Using device: 988ad83557325a315930
2019-09-04 09:17:22:936 - debug: [ADB] Setting device id to 988ad83557325a315930
2019-09-04 09:17:22:936 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell getprop ro.build.version.sdk'
2019-09-04 09:17:23:008 - debug: [ADB] Current device property 'ro.build.version.sdk': 28
2019-09-04 09:17:23:008 - debug: [ADB] Device API level: 28
2019-09-04 09:17:23:008 - warn: [AndroidDriver] Consider setting 'automationName' capability to 'uiautomator2' on Android >= 6, since UIAutomator framework is not maintained anymore by the OS vendor.
2019-09-04 09:17:23:009 - info: [AndroidDriver] App file was not listed, instead we're going to run com.android.chrome directly on the device
2019-09-04 09:17:23:009 - debug: [AndroidDriver] Checking whether package is present on the device
2019-09-04 09:17:23:009 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm list packages com.android.chrome'
2019-09-04 09:17:23:185 - info: [AndroidDriver] Starting Android session
2019-09-04 09:17:23:186 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 wait-for-device'
2019-09-04 09:17:23:196 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell echo ping'
2019-09-04 09:17:23:224 - debug: [AndroidDriver] Pushing settings apk to device...
2019-09-04 09:17:23:225 - debug: [ADB] Getting install status for io.appium.settings
2019-09-04 09:17:23:225 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm list packages io.appium.settings'
2019-09-04 09:17:23:387 - debug: [ADB] App is installed
2019-09-04 09:17:23:387 - debug: [ADB] Getting package info for 'io.appium.settings'
2019-09-04 09:17:23:388 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell dumpsys package io.appium.settings'
2019-09-04 09:17:23:477 - debug: [ADB] The installed 'io.appium.settings' package does not require upgrade (17 > 5)
2019-09-04 09:17:23:477 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell ps'
2019-09-04 09:17:23:654 - debug: [AndroidDriver] io.appium.settings is already running. There is no need to reset its permissions.
2019-09-04 09:17:23:655 - debug: [ADB] Device API level: 28
2019-09-04 09:17:23:655 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell appops set io.appium.settings android\:mock_location allow'
2019-09-04 09:17:23:773 - warn: [AndroidDriver] setDeviceLanguageCountry requires language or country.
2019-09-04 09:17:23:773 - warn: [AndroidDriver] Got language: 'null' and country: 'null'
2019-09-04 09:17:23:773 - debug: [Logcat] Starting logcat capture
2019-09-04 09:17:23:826 - debug: [AndroidDriver] Pushing unlock helper app to device...
2019-09-04 09:17:23:827 - debug: [ADB] Getting install status for io.appium.unlock
2019-09-04 09:17:23:827 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm list packages io.appium.unlock'
2019-09-04 09:17:24:017 - debug: [ADB] App is installed
2019-09-04 09:17:24:017 - debug: [ADB] Getting package info for 'io.appium.unlock'
2019-09-04 09:17:24:018 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell dumpsys package io.appium.unlock'
2019-09-04 09:17:24:137 - debug: [ADB] The installed 'io.appium.unlock' package does not require upgrade ('2.0.0' >= '2.0.0')
2019-09-04 09:17:24:137 - info: [ADB] Getting device platform version
2019-09-04 09:17:24:137 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell getprop ro.build.version.release'
2019-09-04 09:17:24:218 - debug: [ADB] Current device property 'ro.build.version.release': 9
2019-09-04 09:17:24:218 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell wm size'
2019-09-04 09:17:24:336 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell getprop ro.product.model'
2019-09-04 09:17:24:388 - debug: [ADB] Current device property 'ro.product.model': SM-N950F
2019-09-04 09:17:24:389 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell getprop ro.product.manufacturer'
2019-09-04 09:17:24:437 - debug: [ADB] Current device property 'ro.product.manufacturer': samsung
2019-09-04 09:17:24:438 - warn: [AndroidDriver] No app sent in, not parsing package/activity
2019-09-04 09:17:24:438 - debug: [AndroidDriver] No app capability. Assuming it is already on the device
2019-09-04 09:17:24:439 - debug: [ADB] Getting install status for com.android.chrome
2019-09-04 09:17:24:439 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm list packages com.android.chrome'
2019-09-04 09:17:24:643 - debug: [ADB] App is installed
2019-09-04 09:17:24:643 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell am force-stop com.android.chrome'
2019-09-04 09:17:24:751 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell pm clear com.android.chrome'
2019-09-04 09:17:24:967 - debug: [AndroidDriver] Performed fast reset on the installed 'com.android.chrome' application (stop and clear)
2019-09-04 09:17:24:968 - debug: [AndroidBootstrap] Watching for bootstrap disconnect
2019-09-04 09:17:24:969 - debug: [ADB] Forwarding system: 4724 to device: 4724
2019-09-04 09:17:24:969 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 forward tcp\:4724 tcp\:4724'
2019-09-04 09:17:24:979 - debug: [UiAutomator] Starting UiAutomator
2019-09-04 09:17:24:980 - debug: [UiAutomator] Moving to state 'starting'
2019-09-04 09:17:24:980 - debug: [UiAutomator] Parsing uiautomator jar
2019-09-04 09:17:24:980 - debug: [UiAutomator] Found jar name: 'AppiumBootstrap.jar'
2019-09-04 09:17:24:980 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 push /usr/local/lib/node_modules/appium/node_modules/appium-android-driver/bootstrap/bin/AppiumBootstrap.jar /data/local/tmp/'
2019-09-04 09:17:25:012 - debug: [ADB] Attempting to kill all uiautomator processes
2019-09-04 09:17:25:013 - debug: [ADB] Getting all processes with uiautomator
2019-09-04 09:17:25:013 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell ps'
2019-09-04 09:17:25:223 - debug: [ADB] Attempting to kill process 4353
2019-09-04 09:17:25:223 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell kill -0 4353'
2019-09-04 09:17:25:274 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell kill -0 4353'
2019-09-04 09:17:25:323 - warn: [UiAutomator] Error while killing uiAutomator: Error: Unable to kill uiautomator processes. Original error: Error executing adbExec. Original error: 'Command '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell kill -0 4353' exited with code 1'; Stderr: '/system/bin/sh: kill: 4353: Operation not permitted'; Code: '1'
2019-09-04 09:17:25:323 - debug: [UiAutomator] Starting UIAutomator
2019-09-04 09:17:25:324 - debug: [ADB] Creating ADB subprocess with args: ["-P",5037,"-s","988ad83557325a315930","shell","uiautomator","runtest","AppiumBootstrap.jar","-c","io.appium.android.bootstrap.Bootstrap","-e","pkg","com.android.chrome","-e","disableAndroidWatchers",false,"-e","acceptSslCerts",false]
2019-09-04 09:17:25:941 - error: [UiAutomator] UiAutomator exited unexpectedly with code 255, signal null
2019-09-04 09:17:25:943 - debug: [UiAutomator] Moving to state 'stopped'
2019-09-04 09:27:17:724 - warn: [BaseDriver] Shutting down because we waited 600 seconds for a command
2019-09-04 09:27:17:730 - debug: [UiAutomator2] Deleting UiAutomator2 session
2019-09-04 09:27:17:731 - debug: [UiAutomator2] Deleting UiAutomator2 server session
2019-09-04 09:27:17:732 - debug: [JSONWP Proxy] Matched '/' to command name 'deleteSession'
2019-09-04 09:27:17:732 - debug: [JSONWP Proxy] Proxying [DELETE /] to [DELETE http://localhost:8204/wd/hub/session/742c2b78-dba4-44f8-8707-42dbca73d76e] with no body
2019-09-04 09:27:17:734 - warn: [Appium] Closing session, cause was 'New Command Timeout of 600 seconds expired. Try customizing the timeout using the 'newCommandTimeout' desired capability'
2019-09-04 09:27:17:734 - info: [Appium] Removing session c7a3061b-b6cc-4021-88af-830e34bbbf9c from our master session list
2019-09-04 09:27:17:821 - debug: [JSONWP Proxy] Got response with status 200: "{\"sessionId\":\"742c2b78-dba4-44f8-8707-42dbca73d76e\",\"status\":0,\"value\":\"Session deleted\"}"
2019-09-04 09:27:17:822 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 shell am force-stop com.sec.android.app.simsettingmgr'
2019-09-04 09:27:17:938 - debug: [Logcat] Stopping logcat capture
2019-09-04 09:27:17:940 - debug: [ADB] Removing forwarded port socket connection: 8204 
2019-09-04 09:27:17:941 - debug: [ADB] Running '/Users/rahulsahu/Library/Android/sdk/platform-tools/adb -P 5037 -s 988ad83557325a315930 forward --remove tcp\:8204'
2019-09-04 09:27:18:856 - debug: [UiAutomator2] [UIAutomator2] io.appium.uiautomator2.server.test.AppiumUiAutomator2Server:.
2019-09-04 09:27:18:856 - debug: [UiAutomator2] [UIAutomator2] Time: 603.413
2019-09-04 09:27:18:856 - debug: [UiAutomator2] [UIAutomator2] OK (1 test)
2019-09-04 09:27:22:776 - info: [HTTP] <-- POST /wd/hub/session - - ms - -
2019-09-04 09:27:22:776 - info: [HTTP] 
2019-09-04 09:58:28:188 - error: [Logcat] Logcat terminated with code 1, signal null
